apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/k8s-setting.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      type: NodePort
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/k8s-setting.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: ml-server
      name: ml-server
    spec:
      type: NodePort
      ports:
        - name: "8000"
          port: 8000
          targetPort: 8000
      selector:
        io.kompose.service: ml-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/k8s-setting.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: server
      name: server
    spec:
      type: NodePort 
      ports:
        - name: "3030"
          port: 3030
          targetPort: 3030
      selector:
        io.kompose.service: server
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/k8s-setting.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o k8s/k8s-setting.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - args:
                - mysqld
                - --character-set-server=utf8mb4
                - --collation-server=utf8mb4_unicode_ci
              env:
                - name: MYSQL_DATABASE
                - name: MYSQL_PASSWORD
                - name: MYSQL_ROOT_PASSWORD
                - name: MYSQL_USER
                - name: TZ
                  value: Asia/Tokyo
              image: mariadb:focal
              name: goserver-testdb
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/mysql
                  name: db-claim0
                - mountPath: /etc/mysql/conf.d/my.cnf
                  name: db-claim1
                - mountPath: /docker-entrypoint-initdb.d
                  name: db-claim2
          restartPolicy: Always
          volumes:
            - name: db-claim0
              persistentVolumeClaim:
                claimName: db-claim0
            - name: db-claim1
              persistentVolumeClaim:
                claimName: db-claim1
            - name: db-claim2
              persistentVolumeClaim:
                claimName: db-claim2
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-claim0
      name: db-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-claim1
      name: db-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-claim2
      name: db-claim2
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/k8s-setting.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: ml-server
      name: ml-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: ml-server
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o k8s/k8s-setting.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: ml-server
        spec:
          containers:
            - args:
                - uvicorn
                - main:app
                - --reload
                - --host
                - 0.0.0.0
              image: okakyo/ml-server
              name: goserver-ml-server
              ports:
                - containerPort: 8000
              resources: {}
              tty: true
              volumeMounts:
                - mountPath: /src/server
                  name: ml-server-claim0
                - mountPath: /src/tests
                  name: ml-server-claim1
          restartPolicy: Always
          volumes:
            - name: ml-server-claim0
              persistentVolumeClaim:
                claimName: ml-server-claim0
            - name: ml-server-claim1
              persistentVolumeClaim:
                claimName: ml-server-claim1
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: ml-server-claim0
      name: ml-server-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: ml-server-claim1
      name: ml-server-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/k8s-setting.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: server
      name: server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: server
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o k8s/k8s-setting.yml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.service: server
        spec:
          containers:
            - image: okakyo/go-server
              name: server
              ports:
                - containerPort: 3030
              resources: {}
              tty: true
              volumeMounts:
                - mountPath: /src/server
                  name: server-claim0
          restartPolicy: Always
          volumes:
            - name: server-claim0
              persistentVolumeClaim:
                claimName: server-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: server-claim0
      name: server-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

